-- Migration: create coach_conversations table for chat drawer
-- Generated by AI assistant 2025-07-04

-- Extensions (ensure uuid-ossp exists)
create extension if not exists "uuid-ossp";

-- =====================================================================
-- Table: coach_conversations
-- Stores high-level chat threads visible in the mobile side-drawer.
-- Messages themselves live in `conversation_logs` / `coach_interactions`.
-- =====================================================================
create table if not exists public.coach_conversations (
  id uuid primary key default uuid_generate_v4(),
  user_id uuid not null references auth.users(id) on delete cascade,
  title text not null default '',
  created_at timestamptz not null default now(),
  archived boolean not null default false
);

comment on table public.coach_conversations is 'Top-level chat threads for AI Coach mobile UI';
comment on column public.coach_conversations.title is 'Short title derived from first user message';

create index if not exists coach_conversations_user_idx
  on public.coach_conversations(user_id, created_at desc);

-- ---------------------------------------------------------------------
-- Row-Level Security
-- ---------------------------------------------------------------------
alter table public.coach_conversations enable row level security;

-- Users can read / insert / update their own rows (no deletes by design)
create policy "user_read_own_conversations" on public.coach_conversations
  for select using (auth.uid() = user_id);

create policy "user_manage_own_conversations" on public.coach_conversations
  for all
  using (auth.uid() = user_id)
  with check (auth.uid() = user_id);

-- Service-role has full access
create policy "service_role_full_access_conversations" on public.coach_conversations
  for all
  using (auth.role() = 'service_role')
  with check (auth.role() = 'service_role'); 