name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Environment File
      working-directory: ./app
      run: |
        echo "ðŸ“‹ Creating .env file for Flutter asset bundling..."
        
        # Create .env.example with proper content
        echo "# Environment Configuration Template" > .env.example
        echo "# This file provides template values for GitHub builds" >> .env.example
        echo "" >> .env.example
        echo "ENVIRONMENT=development" >> .env.example
        echo "SUPABASE_URL=https://your-project.supabase.co" >> .env.example
        echo "SUPABASE_ANON_KEY=your-supabase-anon-key-here" >> .env.example
        echo "FIREBASE_PROJECT_ID=bee-mvp-3ab43" >> .env.example
        echo "APP_VERSION=1.0.0" >> .env.example
        
        # Create .env from template for CI builds
        cp .env.example .env
        
        echo "âœ… Created .env file from template"
        echo "ðŸ“‹ Verifying .env file exists:"
        ls -la .env
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        
    - name: Get dependencies
      working-directory: ./app
      run: flutter pub get
      
    - name: Verify the build
      working-directory: ./app
      run: flutter analyze
      
    - name: Run tests
      working-directory: ./app
      run: flutter test --coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./app/coverage/lcov.info
        fail_ci_if_error: false

  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Environment File
      working-directory: ./app
      run: |
        echo "ðŸ“‹ Creating .env file for Flutter asset bundling..."
        
        # Create .env.example with proper content
        echo "# Environment Configuration Template" > .env.example
        echo "# This file provides template values for GitHub builds" >> .env.example
        echo "" >> .env.example
        echo "ENVIRONMENT=development" >> .env.example
        echo "SUPABASE_URL=https://your-project.supabase.co" >> .env.example
        echo "SUPABASE_ANON_KEY=your-supabase-anon-key-here" >> .env.example
        echo "FIREBASE_PROJECT_ID=bee-mvp-3ab43" >> .env.example
        echo "APP_VERSION=1.0.0" >> .env.example
        
        # Create .env from template for CI builds
        cp .env.example .env
        
        echo "âœ… Created .env file from template"
        echo "ðŸ“‹ Verifying .env file exists:"
        ls -la .env
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        
    - name: Get dependencies
      working-directory: ./app
      run: flutter pub get
      
    - name: Build APK
      working-directory: ./app
      run: flutter build apk --release
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: app/build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Environment File
      working-directory: ./app
      run: |
        echo "ðŸ“‹ Creating .env file for Flutter asset bundling..."
        
        # Create .env.example with proper content
        echo "# Environment Configuration Template" > .env.example
        echo "# This file provides template values for GitHub builds" >> .env.example
        echo "" >> .env.example
        echo "ENVIRONMENT=development" >> .env.example
        echo "SUPABASE_URL=https://your-project.supabase.co" >> .env.example
        echo "SUPABASE_ANON_KEY=your-supabase-anon-key-here" >> .env.example
        echo "FIREBASE_PROJECT_ID=bee-mvp-3ab43" >> .env.example
        echo "APP_VERSION=1.0.0" >> .env.example
        
        # Create .env from template for CI builds
        cp .env.example .env
        
        echo "âœ… Created .env file from template"
        echo "ðŸ“‹ Verifying .env file exists:"
        ls -la .env
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        
    - name: Get dependencies
      working-directory: ./app
      run: flutter pub get
      
    - name: Build iOS
      working-directory: ./app
      run: flutter build ios --release --no-codesign 