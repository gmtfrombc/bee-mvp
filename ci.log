üîë  Importing Supabase secrets from /Users/gmtfr/.bee_secrets/supabase.env
‚úÖ  .secrets updated from local env file (placeholders remain for any missing vars)
[Supabase Migrations Deploy/deploy] ‚≠ê Run Set up job
[Supabase Migrations Deploy/deploy] üöÄ  Start image=ghcr.io/catthehacker/ubuntu:act-22.04
[Supabase Migrations Deploy/deploy]   üê≥  docker pull image=ghcr.io/catthehacker/ubuntu:act-22.04 platform=linux/amd64 username= forcePull=true
[Supabase Migrations Deploy/deploy]   üê≥  docker create image=ghcr.io/catthehacker/ubuntu:act-22.04 platform=linux/amd64 entrypoint=["tail" "-f" "/dev/null"] cmd=[] network="host"
[Supabase Migrations Deploy/deploy]   üê≥  docker run image=ghcr.io/catthehacker/ubuntu:act-22.04 platform=linux/amd64 entrypoint=["tail" "-f" "/dev/null"] cmd=[] network="host"
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[node --no-warnings -e console.log(process.execPath)] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Set up job
[Supabase Migrations Deploy/deploy]   ‚òÅ  git clone 'https://github.com/supabase/setup-cli' # ref=v1
[Supabase Migrations Deploy/deploy]   ‚òÅ  git clone 'https://github.com/hashicorp/setup-terraform' # ref=v3
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main actions/checkout@v4
[Supabase Migrations Deploy/deploy]   üê≥  docker cp src=/Users/gmtfr/bee-mvp/bee-mvp/. dst=/Users/gmtfr/bee-mvp/bee-mvp
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main actions/checkout@v4 [2.493676333s]
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Setup Supabase CLI
[Supabase Migrations Deploy/deploy]   üê≥  docker cp src=/Users/gmtfr/.cache/act/supabase-setup-cli@v1/ dst=/var/run/act/actions/supabase-setup-cli@v1/
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[/opt/acttoolcache/node/18.20.8/x64/bin/node /var/run/act/actions/supabase-setup-cli@v1/dist/index.js] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Setup Supabase CLI [7.375517083s]
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: SUPABASE_INTERNAL_IMAGE_REGISTRY=ghcr.io
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-output:: version=2.20.3
[Supabase Migrations Deploy/deploy]   ‚öô  ::add-path:: /tmp/1874cc19-d896-4c85-a648-99378b6aaa5a
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Load Supabase secrets into environment
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/2] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Load Supabase secrets into environment [92.375583ms]
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: SUPABASE_URL=***
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: SUPABASE_SERVICE_ROLE_SECRET=
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: SUPABASE_PROJECT_REF=***
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: SUPABASE_DB_PASSWORD=***
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Link Supabase project
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/3] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Link Supabase project [2.455049583s]
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Apply pending migrations
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/4] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Apply pending migrations [639.055083ms]
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Configure Google credentials & set TF_VAR_gcp_project
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/5] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚öô  ***
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Configure Google credentials & set TF_VAR_gcp_project [20.093520541s]
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: GOOGLE_APPLICATION_CREDENTIALS=/tmp/sa.json
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: TF_VAR_gcp_project=bee-mvp-3ab43
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Setup Terraform
[Supabase Migrations Deploy/deploy]   üê≥  docker cp src=/Users/gmtfr/.cache/act/hashicorp-setup-terraform@v3/ dst=/var/run/act/actions/hashicorp-setup-terraform@v3/
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[/opt/acttoolcache/node/18.20.8/x64/bin/node /var/run/act/actions/hashicorp-setup-terraform@v3/dist/index.js] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Setup Terraform [9.730260083s]
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-env:: TERRAFORM_CLI_PATH=/tmp/90d0d704-d1a8-47d7-90d3-55f867c77c17
[Supabase Migrations Deploy/deploy]   ‚öô  ::add-path:: /tmp/90d0d704-d1a8-47d7-90d3-55f867c77c17
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Terraform init, validate & apply (auto-approve)
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/7] user= workdir=infra
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Main Terraform init, validate & apply (auto-approve) [29.531652958s]
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-output:: stdout=Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # google_project_service.cloud_build[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "cloud_build" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "cloudbuild.googleapis.com"
    }

[1m  # google_project_service.cloud_run[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "cloud_run" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "run.googleapis.com"
    }

[1m  # google_project_service.cloud_scheduler[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "cloud_scheduler" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "cloudscheduler.googleapis.com"
    }

[1m  # google_project_service.logging[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "logging" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "logging.googleapis.com"
    }

[1m  # google_project_service.monitoring[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "monitoring" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "monitoring.googleapis.com"
    }

[1m  # google_project_service.secret_manager[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "secret_manager" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "secretmanager.googleapis.com"
    }

[1m  # google_project_service.vertex_ai[0m will be created
[0m  [32m+[0m[0m resource "google_project_service" "vertex_ai" {
      [32m+[0m[0m disable_on_destroy = true
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m project            = "bee-mvp-3ab43"
      [32m+[0m[0m service            = "aiplatform.googleapis.com"
    }

[1m  # google_secret_manager_secret.supabase_service_key[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret" "supabase_service_key" {
      [32m+[0m[0m create_time           = (known after apply)
      [32m+[0m[0m effective_annotations = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m expire_time           = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m project               = "bee-mvp-3ab43"
      [32m+[0m[0m secret_id             = "supabase-service-key"
      [32m+[0m[0m terraform_labels      = (known after apply)

      [32m+[0m[0m replication {
          [32m+[0m[0m auto {
            }
        }
    }

[1m  # google_secret_manager_secret.supabase_url[0m will be created
[0m  [32m+[0m[0m resource "google_secret_manager_secret" "supabase_url" {
      [32m+[0m[0m create_time           = (known after apply)
      [32m+[0m[0m effective_annotations = (known after apply)
      [32m+[0m[0m effective_labels      = (known after apply)
      [32m+[0m[0m expire_time           = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m project               = "bee-mvp-3ab43"
      [32m+[0m[0m secret_id             = "supabase-url"
      [32m+[0m[0m terraform_labels      = (known after apply)

      [32m+[0m[0m replication {
          [32m+[0m[0m auto {
            }
        }
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m enabled_apis     = [
      [32m+[0m[0m "run.googleapis.com",
      [32m+[0m[0m "cloudbuild.googleapis.com",
      [32m+[0m[0m "aiplatform.googleapis.com",
      [32m+[0m[0m "cloudscheduler.googleapis.com",
      [32m+[0m[0m "monitoring.googleapis.com",
      [32m+[0m[0m "logging.googleapis.com",
    ]
  [32m+[0m[0m supabase_secrets = {
      [32m+[0m[0m key_secret = "supabase-service-key"
      [32m+[0m[0m url_secret = "supabase-url"
    }
[0m[1mgoogle_project_service.monitoring: Creating...[0m[0m
[0m[1mgoogle_project_service.vertex_ai: Creating...[0m[0m
[0m[1mgoogle_project_service.logging: Creating...[0m[0m
[0m[1mgoogle_project_service.cloud_run: Creating...[0m[0m
[0m[1mgoogle_project_service.cloud_build: Creating...[0m[0m
[0m[1mgoogle_project_service.secret_manager: Creating...[0m[0m
[0m[1mgoogle_project_service.cloud_scheduler: Creating...[0m[0m
[0m[1mgoogle_project_service.secret_manager: Creation complete after 4s [id=bee-mvp-3ab43/secretmanager.googleapis.com][0m
[0m[1mgoogle_project_service.cloud_run: Creation complete after 4s [id=bee-mvp-3ab43/run.googleapis.com][0m
[0m[1mgoogle_project_service.cloud_build: Creation complete after 4s [id=bee-mvp-3ab43/cloudbuild.googleapis.com][0m
[0m[1mgoogle_project_service.logging: Creation complete after 4s [id=bee-mvp-3ab43/logging.googleapis.com][0m
[0m[1mgoogle_project_service.cloud_scheduler: Creation complete after 4s [id=bee-mvp-3ab43/cloudscheduler.googleapis.com][0m
[0m[1mgoogle_project_service.vertex_ai: Creation complete after 4s [id=bee-mvp-3ab43/aiplatform.googleapis.com][0m
[0m[1mgoogle_secret_manager_secret.supabase_url: Creating...[0m[0m
[0m[1mgoogle_project_service.monitoring: Creation complete after 4s [id=bee-mvp-3ab43/monitoring.googleapis.com][0m
[0m[1mgoogle_secret_manager_secret.supabase_service_key: Creating...[0m[0m
[0m[1mgoogle_secret_manager_secret.supabase_url: Creation complete after 1s [id=projects/bee-mvp-3ab43/secrets/supabase-url][0m
[0m[1mgoogle_secret_manager_secret.supabase_service_key: Creation complete after 1s [id=projects/bee-mvp-3ab43/secrets/supabase-service-key][0m
[0m[1m[32m
Apply complete! Resources: 9 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0menabled_apis = [
  "run.googleapis.com",
  "cloudbuild.googleapis.com",
  "aiplatform.googleapis.com",
  "cloudscheduler.googleapis.com",
  "monitoring.googleapis.com",
  "logging.googleapis.com",
]
supabase_secrets = {
  "key_secret" = "supabase-service-key"
  "url_secret" = "supabase-url"
}
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-output:: stderr=
[Supabase Migrations Deploy/deploy]   ‚öô  ::set-output:: exitcode=0
[Supabase Migrations Deploy/deploy] ‚≠ê Run Main Enforce Supabase password policy
[Supabase Migrations Deploy/deploy]   üê≥  docker exec cmd=[bash -e /var/run/act/workflow/8] user= workdir=
[Supabase Migrations Deploy/deploy]   ‚ùå  Failure - Main Enforce Supabase password policy [271.450625ms]
[Supabase Migrations Deploy/deploy] exitcode '1': failure
[Supabase Migrations Deploy/deploy] ‚≠ê Run Complete job
[Supabase Migrations Deploy/deploy]   ‚úÖ  Success - Complete job
[Supabase Migrations Deploy/deploy] üèÅ  Job failed
